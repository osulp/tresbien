FactoryGirl.define do
  # returns a date some number of days in the past
  sequence :date do |n|
    (1..500).to_a.sample.days.ago
  end
  # returns a sequence some number of days from today; guaranteed to be after the date generated by a :date sequence
  sequence :to_date do |n|
    (1..500).to_a.sample.days.from_now
  end
  factory :travel_city do
    from_date { generate(:date) }
    to_date { generate(:to_date) }
    city "Portland"
    state "Oregon"
    country "United States"
    include_meals false
    hotel_rate "60"
    meals "60"
    per_diem "120"
    client_id "0"
  end
  factory :travel_itinerary do
    date { generate(:date) }
    city "Portland"
    state "Oregon"
    country "United States"
    break "20"
    lunch "20"
    dinner "20"
    hotel "60"
    amount 120.0
    per_diem 120.0
    client_id "0"
  end
  factory :description do
    name "Did the thing"
    active true
  end
  factory :reimbursement_request do
    # travel_cities { build_stubbed(:travel_city) }
    # travel_itineraries { build_stubbed(:travel_itineraries) }
    # accountings { build_stubbed(:accountings) }
    # expense_others { build_stubbed(:expense_others) }
    # expense_mileages { build_stubbed(:expense_mileages) }
    # expense_airfares { build_stubbed(:expense_airfares) }
    # attachments { build_stubbed(:attachments) }
    ############################################
    # travel_cities { build_stubbed(:travel_city)}
    ############################################
    # travel_itineraries { build_stubbed(:travel_itinerary) }
    business_notes_and_purpose "First I did the thing in one place and then I did the thing in another place"
    claimant
    certifier
    # factory :reimbursement_request_with_comments do
    #   status_comments = build_stubbed(:status_comments)
    # end
    description
    after(:build) do |request, evaluator|
      create_list(:travel_city, 1, reimbursement_request: request)
      create_list(:travel_itinerary, 1, reimbursement_request: request)
    end
  end
end
