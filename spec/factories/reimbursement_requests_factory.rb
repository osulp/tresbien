FactoryGirl.define do
  # returns a date some number of days in the past
  sequence :date do |n|
    (1..500).to_a.sample.days.ago
  end
  # returns a sequence some number of days from today; guaranteed to be after the date generated by a :date sequence
  sequence :to_date do |n|
    (1..500).to_a.sample.days.from_now
  end
  factory :travel_city do
    from_date { generate(:date) }
    to_date { generate(:to_date) }
    city "Portland"
    state "Oregon"
    country "United States"
    include_meals false
    hotel_rate "60"
    meals "60"
    per_diem "120"
    client_id "0"
  end
  factory :travel_itinerary do
    date { generate(:date) }
    city "Portland"
    state "Oregon"
    country "United States"
    breakfast "20"
    lunch "20"
    dinner "20"
    hotel "60"
    amount 120.0
    per_diem 120.0
    client_id "0"
  end
  factory :accounting do
    index "123"
    fund "0110011"
    organization "123456789"
    account "987643"
    program "100003"
    activity "NOT123"
    amount 24.0
  end
  factory :expense_airfare do
    from_date { generate(:date)}
    to_date {generate(:to_date)}
    from_location "PDX"
    to_location "LAX"
    notes "This is a test flight"
    amount 90.5
  end
  factory :expense_other do
    from_date { generate(:date)}
    to_date {generate(:to_date)}
    notes "Here's an other expense"
    amount 64.4
    expense_type
    above_per_diem_expense false
    client_id "123"
  end
  factory :expense_mileage do
    from_date { generate(:date)}
    to_date {generate(:to_date)}
    from_city "Corvallis"
    from_state "Oregon"
    to_city "Portland"
    to_state "Oregon"
    miles 180
    round_trip true
    notes "There and back again"
    amount 97.2
  end
  factory :expense_type do
    name "Did the test"
    active true
  end
  factory :description do
    name "Did the thing"
    active true
  end
  factory :reimbursement_request do
    transient do
      num_travel_itineraries 1
      num_travel_cities 1
      num_accountings 1
      num_expense_others 1
      num_expense_mileages 1
      num_expense_airfares 1
    end
    claimant
    certifier
    description
    business_notes_and_purpose "First I did the thing in one place and then I did the thing in another place"
    after(:build) do |request, evaluator|
      request.travel_itineraries = (1..evaluator.num_travel_itineraries).to_a.map { build(:travel_itinerary) }
      request.travel_cities = [build(:travel_city)]
      request.accountings = [build(:accounting)]
      request.expense_others = [build(:expense_other)]
      request.expense_mileages = [build(:expense_mileage)]
      request.expense_airfares = [build(:expense_airfare)]
    end
  end
end
